"0",""
"0","loo1 = prediction.leave.one.out(elem.bout = elements.bout, it = 10, cores = 10, lvl = 1, out = round(length(elements.bout) / 25,0))"
"0","loo0 = prediction.leave.one.out(elem.bout = elements.bout, it = 10, cores = 10, lvl = 0, out = round(length(elements.bout) / 25,0))"
"0","loo2 = prediction.leave.one.out(elem.bout = elements.bout, it = 10, cores = 10, lvl = 2, out = round(length(elements.bout) / 25,0))"
"0","loo3 = prediction.leave.one.out(elem.bout = elements.bout, it = 10, cores = 10, lvl = 3, out = round(length(elements.bout) / 25,0))"
"0",""
"0","nn1 = neural.leave.one.out(elem.bout = elements.bout, lvl = 1, total_epochs = 20, cores = 10, it = 10, out = round(length(elements.bout) / 25,0))"
"0","nn2 = neural.leave.one.out(elem.bout = elements.bout, lvl = 2, total_epochs = 20, cores = 10, it = 10, out = round(length(elements.bout) / 25,0))"
"0","nn3 = neural.leave.one.out(elem.bout = elements.bout, lvl = 3, total_epochs = 20, cores = 10, it = 1, out = round(length(elements.bout) / 25,0))"
"0",""
"0","prediction.table = data.frame(level = c(0,1,2,3), "
"0","                              probabilities = c(loo0$full.mean, "
"0","                                                loo1$full.mean,"
"0","                                                loo2$full.mean,"
"0","                                                loo3$full.mean), "
"0","                              neural.network = c(loo0$full.mean,"
"0","                                                 nn1$accuracy,"
"0","                                                 nn2$accuracy,"
"0","                                                 nn3$accuracy))"
"0",""
"0","kable(prediction.table, row.names = F, caption = ""Prediction accuracy of applied transitions probabilities and deep learning model at different levels: level 0 is the prediction based on the simple occurrence probability of each element, level 1 has one antecedent element, level 2 has two antecedents, etc"", col.names = c('Level', 'Applied Probabilities', 'Deep Learning'), digits = 3)"
