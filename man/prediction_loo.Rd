% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prediction_loo.R
\name{prediction_loo}
\alias{prediction_loo}
\title{Tests accuracy of markov transition in predicting next elements by creating transition probabilities for all bouts bar one, and then trying to predict that bout}
\usage{
prediction_loo(
  elem.bout,
  it = 1,
  trials = 100,
  cores = 10,
  lvl = 1,
  gap = NULL,
  elem.time = NULL,
  out = 10,
  ran.method = "random"
)
}
\arguments{
\item{elem.bout}{list of vectors of elements. Co-occurring elements are marked by the percentage symbol.}

\item{it}{how many iterations of the random splitting of co-occurring elements should be used? If elements never co-occur, this can be set to 1. If there are many co-occurrences, this number should be high, but this will make things slower}

\item{trials}{number of iterations of assignments}

\item{cores}{number of cores for parallel randomization (default is 2)}

\item{lvl}{number representing the order/antecedent length at which predictions should be made. 0 is base probability of consequent, 1 is transition given 1 antecedent (e.g., 'Hit'), 2 is bigram antecedent (e.g., 'Hit:Slap') etc}

\item{gap}{number of elements to each side that should be counted in the same 'bag' as the element; if 'all', use whole bout}

\item{elem.time}{list of vectors of timings of elements. If set to NULL, the order of elements is used with distance of 1}

\item{out}{number of elements left out per leave-one-out iteration}

\item{ran.method}{for co-occurring elements, how should they be split? Can be 'random' (order is randomised), or 'sample' (randomly choose any)}
}
\value{
Returns the mean value of correct classifications
}
\description{
Tests accuracy of markov transition in predicting next elements by creating transition probabilities for all bouts bar one, and then trying to predict that bout
}
\examples{
###
}
\author{
Alex Mielke
}
